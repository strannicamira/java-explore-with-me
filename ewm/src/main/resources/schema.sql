-- DROP SEQUENCE user_id_seq;
-- DROP SEQUENCE hibernate_sequence;

DROP TABLE IF EXISTS PUBLIC.EVENTS;
DROP TABLE IF EXISTS PUBLIC.STATES;
DROP TABLE IF EXISTS PUBLIC.LOCATIONS;
DROP TABLE IF EXISTS PUBLIC.CATEGORIES;
DROP TABLE IF EXISTS PUBLIC.USERS;


-- CREATE SEQUENCE IF NOT EXISTS  hibernate_sequence START WITH 0;
CREATE SEQUENCE IF NOT EXISTS user_id_seq START WITH 0;
-- CREATE SEQUENCE user_id_seq INCREMENT BY 0;

CREATE TABLE IF NOT EXISTS PUBLIC.USERS
(
--     ID    INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL   ,
--     ID    INTEGER PRIMARY KEY      NOT NULL,
    id BIGINT NOT NULL DEFAULT nextval('user_id_seq') PRIMARY KEY,
--     id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
--     id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
--     id BIGSERIAL UNIQUE ,
--     ID    SERIAL PRIMARY KEY       NOT NULL,
--     ID    BIGSERIAL PRIMARY KEY,
--     ID    INTEGER AUTO_INCREMENT PRIMARY KEY,

    NAME  CHARACTER VARYING                                   NOT NULL,
    EMAIL CHARACTER VARYING UNIQUE                            NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.CATEGORIES
(
    ID   INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
--     ID   INTEGER PRIMARY KEY      NOT NULL,
    NAME CHARACTER VARYING UNIQUE                     NOT NULL
);

CREATE TABLE IF NOT EXISTS PUBLIC.LOCATIONS
(
    ID           INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
--     ID           INTEGER PRIMARY KEY NOT NULL,
    LOCATION_LAT FLOAT                                        NOT NULL,
    LOCATION_LON FLOAT                                        NOT NULL

);

CREATE TABLE IF NOT EXISTS PUBLIC.STATES
(
    ID   INTEGER NOT NULL PRIMARY KEY,
    NAME CHARACTER VARYING
);

CREATE TABLE IF NOT EXISTS PUBLIC.EVENTS
(
    ID                 INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
--     ID                 INTEGER PRIMARY KEY                       NOT NULL,
    ANNOTATION         CHARACTER VARYING                            NOT NULL,
    CATEGORY_ID        INTEGER REFERENCES PUBLIC.CATEGORIES (ID)    NOT NULL,
    CONFIRMED_REQUESTS INTEGER,
    CREATED_ON         TIMESTAMP WITHOUT TIME ZONE                  NOT NULL,
    DESCRIPTION        CHARACTER VARYING                            NOT NULL,
    EVENT_DATE         TIMESTAMP WITHOUT TIME ZONE                  NOT NULL,
    INITIATOR_ID       INTEGER REFERENCES PUBLIC.USERS (ID)         NOT NULL,
    LOCATION_ID        INTEGER REFERENCES PUBLIC.LOCATIONS (ID)     NOT NULL,
--     LOCATION_LAT       FLOAT                                        NOT NULL,
--     LOCATION_LON       FLOAT                                        NOT NULL,
    PAID               BOOLEAN,
    PARTICIPANT_LIMIT  INTEGER,
    PUBLISHED_ON       TIMESTAMP WITHOUT TIME ZONE,
    REQUEST_MODERATION BOOLEAN,
    STATE              INTEGER REFERENCES PUBLIC.STATES (ID)        NOT NULL,
    TITLE              CHARACTER VARYING                            NOT NULL,
    VIEWS              INTEGER
);